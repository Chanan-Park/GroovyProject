<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper 기본설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 유일해야 함, 주로 파일명) -->
<mapper namespace="yeojin">
	
	<!-- 이 안에 sql문을 적는다 -->
	
	<!-- ========================================================================== -->
	<!-- 전사일정 소분류 보여주기 -->
	<select id="showCompanyCalendar" resultType="com.spring.groovy.schedule.model.CalSmallCategoryVO">
		select smcatgono, fk_lgcatgono, smcatgoname
		from tbl_calendar_small_category
		where fk_lgcatgono = 1
		order by smcatgono asc
	</select>
	
	
	<!-- 전사일정 소분류명 존재여부 확인 -->
	<select id="existComCalendar"  parameterType="String" resultType="int">
		select count(*)
		from tbl_calendar_small_category
		where fk_lgcatgono = 1 and smcatgoname = #{comSmcatgoname}
	</select>
	
	<!-- 전사일정 소분류 추가 -->	
	<insert id="addComCalendar" parameterType="HashMap">
		insert into tbl_calendar_small_category(smcatgono, fk_lgcatgono, smcatgoname, fk_empno)
		values(seq_smcatgono.nextval, 1, #{comSmcatgoname}, #{empno})
	</insert>
	<!-- ========================================================================== -->
	
	
	<!-- ========================================================================== -->
	<!-- 팀별일정 소분류 보여주기 -->
	<select id="showTeamCalendar" parameterType="String" resultType="com.spring.groovy.schedule.model.CalSmallCategoryVO">
		select smcatgono, fk_lgcatgono, smcatgoname, fk_empno, department
		from
		(
		    select smcatgono, fk_lgcatgono, smcatgoname, fk_empno, E.department
		    from tbl_calendar_small_category C join tbl_employee E
		    on C.fk_empno = E.empno
		    where fk_lgcatgono = 2
		    order by smcatgono asc
		)
		where department = #{dept}
	</select>
	
	
	<!-- 팀별일정 소분류명 존재여부 확인 -->
	<select id="existTeamCalendar" parameterType="HashMap" resultType="int">
		select count(*)
		from 
		(
		    select smcatgono, fk_lgcatgono, smcatgoname, fk_empno, E.department
		    from tbl_calendar_small_category C join tbl_employee E
		    on C.fk_empno = E.empno
		    where fk_lgcatgono = 2 and department = (select department from tbl_employee where empno = #{empno})
		    order by smcatgono asc
		)
		where fk_lgcatgono = 2 and smcatgoname = #{teamSmcatgoname}
	</select>
	
	<!-- 팀별일정 소분류 추가 -->
	<insert id="addTeamCalendar" parameterType="HashMap">
		insert into tbl_calendar_small_category(smcatgono, fk_lgcatgono, smcatgoname, fk_empno)
		values(seq_smcatgono.nextval, 2, #{teamSmcatgoname}, #{empno})
	</insert>
	<!-- ========================================================================== -->
	
	
	<!-- ========================================================================== -->
	<!-- 개인일정 소분류명 존재여부 확인 -->
	<select id="existMyCalendar" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_calendar_small_category
		where fk_lgcatgono = 3 and fk_empno = #{empno} and smcatgoname = #{mySmcatgoname}
	</select>
	
	<!-- 개인일정 소분류 추가 -->	
	<insert id="addMyCalendar" parameterType="HashMap">
		insert into tbl_calendar_small_category(smcatgono, fk_lgcatgono, smcatgoname, fk_empno)
		values(seq_smcatgono.nextval, 3, #{mySmcatgoname}, #{empno})
	</insert>
	
	
	<!-- 개인일정 소분류 보여주기 -->
	<select id="showMyCalendar" parameterType="String" resultType="com.spring.groovy.schedule.model.CalSmallCategoryVO">
		select smcatgono, fk_lgcatgono, smcatgoname, fk_empno
		from tbl_calendar_small_category
		where fk_lgcatgono = 3 and fk_empno = #{empno}
		order by smcatgono asc
	</select>
	<!-- ========================================================================== -->
	
	
	<!-- ========================================================================== -->
	<!-- 수정하려는 전사일정 및 팀별일정, 개인일정 소분류명이 이미 해당 사용자가 만든 소분류 카테고리명으로 존재하는지 유무 알아오기 -->
	<select id="existsCalCateg" parameterType="HashMap" resultType="int">
	    select count(*)
		from tbl_calendar_small_category
		where fk_lgcatgono = #{caltype} and 
			  fk_empno = #{empno} and 
			  smcatgoname = #{smcatgoname}
	</select>
	
	<!-- 전사일정 및 팀별일정, 개인일정 소분류명 수정하기  -->
	<update id="editCalCateg"  parameterType="HashMap">
		update tbl_calendar_small_category set smcatgoname = #{smcatgoname}
		where smcatgono = #{smcatgono}
	</update>
	
	
	<!-- 전사일정 및 팀별일정, 개인일정 소분류 삭제하기 -->
	<delete id="delCalCateg" parameterType="String">
		delete tbl_calendar_small_category
		where smcatgono = #{smcatgono}
	</delete>
	<!-- ========================================================================== -->
	
	
	<!-- 일정 등록시 전사일정, 팀별일정, 개인일정 선택에 따른 서브캘린더 종류를 알아오기 -->
	<select id="selectSmallCateg" parameterType="HashMap" resultType="com.spring.groovy.schedule.model.CalSmallCategoryVO">
		select smcatgono, fk_lgcatgono, smcatgoname, fk_empno, department
	    from tbl_calendar_small_category C join tbl_employee E
	    on C.fk_empno = E.empno
		<if test='fk_lgcatgono == "1"'>
		    where fk_lgcatgono = 1 and department = (select department from tbl_employee where empno = #{empno})
		</if>
		<if test='fk_lgcatgono == "2"'>
		    where fk_lgcatgono = 2 and department = (select department from tbl_employee where empno = #{empno})
		</if>
		<if test='fk_lgcatgono == "3"'>
		    where fk_lgcatgono = 3 and fk_empno = #{empno}
		</if>
		 order by smcatgono asc
	</select>
	
	
	<!-- 참석자를 찾기 위한 특정글자가 들어간 회원명단 불러오기  -->
	<select id="searchJoinUserList" parameterType="String" resultType="com.spring.groovy.management.model.MemberVO">
		select empno, name, cpemail
		from tbl_employee
		where lower(name) like '%'|| lower(#{joinUserName}) ||'%'
	</select>
	
	
	
	<!-- 일정 등록하기 -->
	<insert id="insertScheduleEnd" parameterType="HashMap">
		insert into tbl_calendar_schedule(scheduleno, startdate, enddate, subject, color, place, joinuser, content, fk_smcatgono, fk_lgcatgono, fk_empno) 
    	values(seq_scheduleno.nextval, to_date(#{startdate}, 'yyyymmddhh24miss'), to_date(#{enddate}, 'yyyymmddhh24miss'), #{subject}, #{color}, #{place}, #{joinuser}, #{content}, #{fk_smcatgono}, #{fk_lgcatgono}, #{empno})  
	</insert>
	
	
	<!-- 모든 캘린더(사내캘린더, 내캘린더, 공유받은캘린더)를 불러오는것 -->	
	<resultMap type="HashMap" id="allScheMap">
		<result property="scheduleno" column="scheduleno" javaType="String" />
		<result property="startdate" column="startdate" javaType="String" />
		<result property="enddate" column="enddate" javaType="String" />
		<result property="subject" column="subject" javaType="String" />
		<result property="color" column="color" javaType="String" />
		<result property="place" column="place" javaType="String" />
		<result property="joinuser" column="joinuser" javaType="String" />
		<result property="content" column="content" javaType="String" />
		<result property="fk_smcatgono" column="fk_smcatgono" javaType="String" />
		<result property="fk_lgcatgono" column="fk_lgcatgono" javaType="String" />
		<result property="fk_empno" column="fk_empno" javaType="String" />
		<result property="department" column="department" javaType="String" />
	</resultMap>
	
	<select id="selectSchedule" parameterType="HashMap" resultMap="allScheMap">
		select scheduleno, startdate, enddate, subject, color, place, joinuser, content, fk_smcatgono, fk_lgcatgono, fk_empno, department
		from tbl_calendar_schedule C join tbl_employee E
		on C.fk_empno = E.empno
		where fk_empno = #{empno} OR
		fk_lgcatgono = 1 OR
		(fk_lgcatgono = 2 AND department = (select department from tbl_employee where empno = #{empno}) ) OR
		fk_lgcatgono = 3 OR 
		lower(joinuser) like '%'|| lower(#{cpemail}) ||'%'
		order by scheduleno asc
	</select>
		
		
	<!-- 일정 상세보기 -->
	<resultMap type="HashMap" id="viewScheduleMap">
		<result property="SCHEDULENO" 	column="scheduleno" 	javaType="String" />
		<result property="STARTDATE" 	column="startdate" 		javaType="String" />
		<result property="ENDDATE" 		column="enddate" 		javaType="String" />
		<result property="SUBJECT" 		column="subject" 		javaType="String" />
		<result property="COLOR" 		column="color" 			javaType="String" />
		<result property="PLACE" 		column="place" 			javaType="String" />
		<result property="JOINUSER" 	column="joinuser" 		javaType="String" />
		<result property="CONTENT" 		column="content" 		javaType="String" />
		<result property="FK_SMCATGONO" column="fk_smcatgono" 	javaType="String" />
		<result property="FK_LGCATGONO" column="fk_lgcatgono" 	javaType="String" />
		<result property="fk_empno" 	column="fk_userid" 		javaType="String" />
		<result property="NAME" 		column="name" 			javaType="String" />
		<result property="SMCATGONAME" 	column="smcatgoname" 	javaType="String" />
	</resultMap>
	
	<select id="viewSchedule" parameterType="String" resultMap="viewScheduleMap">
		select SD.scheduleno
		     , to_char(SD.startdate,'yyyy-mm-dd hh24:mi') as startdate
		     , to_char(SD.enddate,'yyyy-mm-dd hh24:mi') as enddate  
		     , SD.subject
		     , SD.color
		     , nvl(SD.place,'-') as place
		     , nvl(SD.joinuser,'공유자가 없습니다.') as joinuser
		     , nvl(SD.content,'') as content
		     , SD.fk_smcatgono
		     , SD.fk_lgcatgono
		     , SD.fk_empno
		     , M.name
		     , SC.smcatgoname
		from tbl_calendar_schedule SD 
		JOIN tbl_employee M
		ON SD.fk_empno = M.empno
		JOIN tbl_calendar_small_category SC
		ON SD.fk_smcatgono = SC.smcatgono
		where SD.scheduleno = #{scheduleno}
	</select>	
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
</mapper>