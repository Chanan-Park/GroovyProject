<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper 기본설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 유일해야 함, 주로 파일명) -->
<mapper namespace="hyewon">
	<!-- 이 안에 sql문을 적는다 -->
	
	<insert id="goStartWork" parameterType="HashMap">
		update tbl_attendance set workstart = sysdate
		where fk_empno = #{empno} and to_char(workdate, 'yyyy-mm-dd') = (select to_char(sysdate, 'yyyy-mm-dd') from dual )
	</insert>
	
	<update id="goEndWork" parameterType="HashMap">
		update tbl_attendance set workend = sysdate
		where fk_empno = #{empno} and to_char(workdate, 'yyyy-mm-dd') = (select to_char(sysdate, 'yyyy-mm-dd') from dual )
	</update>
	
	<resultMap type="HashMap" id="workTimeMap">
		<result property="workstart"   column="workstart"   javaType="String" />
		<result property="workend"    column="workend"    javaType="String" />
	</resultMap>
	<select id="getWorkTimes" resultMap="workTimeMap" parameterType="HashMap">
		select nvl(to_char(workstart, 'hh24:mi:ss'), '-') as workstart
			 , nvl(to_char(workend, 'hh24:mi:ss'), '-') as workend
		from tbl_attendance
		where fk_empno = #{empno} and to_char(workdate, 'yyyy-mm-dd') = (select to_char(sysdate, 'yyyy-mm-dd') from dual )
	</select>
	
	
	<resultMap type="HashMap" id="partMap">
		<result property="department"   column="department"   javaType="String" />
	</resultMap>
	<select id="getDepartment" resultMap="partMap" parameterType="HashMap">
		select department
		from tbl_employee
		where empno = #{empno}
	</select>
	
	<insert id="requestAttendance" parameterType="HashMap">
    	<if test='attend_index.equals("dayoff")'>
	    	insert into tbl_attendance_request (requestid, fk_empno, attend_index, starttime )
			values(seq_attendance_request.nextval, #{empno, jdbcType=INTEGER}, #{attend_index}, to_date(#{usedate},'yyyy-mm-dd'))
	    </if>
	    <if test='!attend_index.equals("dayoff")'>
	    	 INSERT INTO tbl_attendance_request (requestid, fk_empno, attend_index, starttime, endtime, place, reason  )
			 VALUES(seq_attendance_request.nextval, #{empno, jdbcType=INTEGER}, #{attend_index}, to_date(#{starttime},'yyyy-mm-dd hh24:mi'), to_date(#{endtime},'yyyy-mm-dd hh24:mi'), #{place}, #{reason})
	    </if>
	</insert>
	
	
	
	
	<select id="myAttendStatusList" resultType="com.spring.groovy.attendance.model.AttendanceVO" parameterType="HashMap">
		select fk_empno, workstart, workdate, workend, trip, tripstart, tripend, triptime, dayoff, extendstart, worktime
		from 
		(
			select rownum AS RNO, fk_empno, trip
					 , to_char(workdate, 'mm.dd dy') as workdate
					 , to_char(workstart, 'hh24:mi:ss') as workstart
			         , nvl(to_char(workend, 'hh24:mi:ss'), '-') as workend
			         , nvl(to_char(tripstart), '-') as tripstart, nvl(to_char(tripend), '-') as tripend
			         , nvl(to_char(round((tripend-tripstart)*24,2)), '-') as triptime, dayoff
			         , nvl(to_char(round((workend-extendstart)*24,2)), '-') as extendstart
			         , NVL(trunc((((workend - workstart)*24)*60)/60), 0)|| '시간 ' ||  NVL(round(mod((((workend - workstart)*24)*60), 60)), 0) || '분' as worktime
		    from 
		    (
		        select *
		        from tbl_attendance 
		        where fk_empno = #{empno} and workdate between( select TRUNC(to_date(#{calMonthVal}, 'yyyy-mm'), 'iw') from dual ) and (select next_day((last_day(to_date(#{calMonthVal}, 'yyyy-mm'))),'금') from dual )
		        order by workdate
		    ) V
		) T
	</select>
	
	
	<resultMap type="HashMap" id="weeklyworkTimesMap">
		<result property="weeklywork"    column="weeklywork"     javaType="String" />
		<result property="remainwork"    column="remainwork"     javaType="String" />
		<result property="weeklyextend"  column="weeklyextend"   javaType="String" />
	</resultMap>
			<select id="getWeeklyWorkTimes" resultMap="weeklyworkTimesMap" parameterType="HashMap">
		select trunc((sum((workend-workstart)*24)*60)/60)|| '시간 ' ||  round(mod(sum(((workend-workstart)*24)*60), 60)) || '분' as weeklywork
		     , trunc(((40-NVL(round(sum((workend-workstart)*24), 2), 0))*60)/60)|| '시간 ' ||  round(mod(((40-NVL(round(sum((workend-workstart)*24), 2), 0))*60), 60)) || '분' as remainwork
		     , NVL(trunc((sum((workend-extendstart)*24)*60)/60), 0)|| '시간 ' ||  NVL(round(mod(sum(((workend-extendstart)*24)*60), 60)), 0) || '분' as weeklyextend
		from tbl_attendance 
		where fk_empno = #{empno} and workdate between( select TRUNC(sysdate, 'iw') from dual ) and ( select TRUNC(sysdate, 'iw')+5 from dual )
	</select>
	
	
	
	<resultMap type="HashMap" id="monthlyworkTimesMap">
		<result property="monthlywork"    column="monthlywork"     javaType="String" />
		<result property="monthlyextend"    column="monthlyextend"     javaType="String" />
	</resultMap>
	<select id="getMonthlyWorkTimes" resultMap="monthlyworkTimesMap" parameterType="HashMap">
		select trunc((sum((workend-workstart)*24)*60)/60)|| '시간 ' ||  round(mod((sum((workend-workstart)*24)*60), 60)) || '분' as monthlywork
		     , trunc((sum((workend-extendstart)*24)*60)/60)|| '시간 ' ||  round(mod((sum((workend-extendstart)*24)*60), 60)) || '분' as monthlyextend
		from tbl_attendance 
		where fk_empno = #{empno} and workdate between( SELECT TRUNC(SYSDATE, 'MM') FROM DUAL ) and  (select last_day(sysdate) from dual )  
	</select>
	
	
	
	<select id="getRequestList" resultType="com.spring.groovy.attendance.model.AttandanceRequestVO" parameterType="HashMap">
		<![CDATA[
		select requestid, attend_index, to_char(starttime, 'yyyy.mm.dd hh24:mi') as starttime
		     , to_char(endtime, 'yyyy.mm.dd hh24:mi') as endtime
		     , nvl(place, '-') as place, nvl(reason, '-') as reason
		     , to_char(registerdate, 'yyyy.mm.dd') as registerdate
		from tbl_attendance_request
		where fk_empno = #{empno} 
			  and starttime > sysdate 
		]]>
	</select>
	
	
	<select id="getUsedAttendList" resultType="com.spring.groovy.attendance.model.AttandanceRequestVO" parameterType="HashMap">
		<![CDATA[
		select requestid, attend_index, to_char(starttime, 'yyyy-mm-dd hh24:mi') as starttime
		     , to_char(endtime, 'yyyy-mm-dd hh24:mi') as endtime
		     , nvl(place, '-') as place, nvl(reason, '-') as reason
		     , to_char(registerdate, 'yyyy-mm-dd') as registerdate
		from tbl_attendance_request
		where fk_empno = #{empno} and starttime > to_date(#{dateStart}, 'yyyy-mm-dd') and endtime < sysdate
		]]>
	</select>
	
	
	
	<resultMap type="HashMap" id="boxAttendMap">
		<result property="worktime"    column="worktime"     javaType="String" />
		<result property="triptime"    column="triptime"     javaType="String" />
		<result property="extendtime"    column="extendtime"     javaType="String" />
		<result property="dayoffcnt"    column="dayoffcnt"     javaType="String" />
	</resultMap>
	<select id="getBoxAttend" resultMap="boxAttendMap" parameterType="HashMap">
		select NVL(trunc((sum((workend-workstart)*24)*60)/60), 0)|| '시간 ' ||  NVL(round(mod((sum((workend-workstart)*24)*60), 60)),0) || '분' as worktime
		     , nvl(to_char( round( sum((tripend-tripstart)*24), 1) ),'0') as triptime
		     , nvl(to_char( round( sum((workend-extendstart)*24), 1) ),'0') as extendtime
		     , sum(decode(dayoff, 'Y', 1, 'N', 0)) as dayoffcnt     
		from tbl_attendance 
		where fk_empno = #{empno} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')
	</select>
	
	
	
	<select id="getTeamInfoBox" resultType="com.spring.groovy.management.model.MemberVO" parameterType="HashMap">
		select empno, department, name, position, bumun
		from tbl_employee
		where department = ( select department from tbl_employee where empno = #{empno} )
		order by empno
	</select>
	
	
	
	<resultMap type="HashMap" id="PersonalInfoMap">
		<result property="name"    column="name"     javaType="String" />
		<result property="department"    column="department"     javaType="String" />
		<result property="position"    column="position"     javaType="String" />
		<result property="empimg"    column="empimg"     javaType="String" />
		<result property="worksum"    column="worksum"     javaType="String" />
		<result property="fk_empno"    column="fk_empno"     javaType="String" />
	</resultMap>
	<select id="getPersonalInfoBox" resultMap="PersonalInfoMap" parameterType="HashMap">
		select name, department, position, empimg, worksum, fk_empno
		from 
		(
		    select fk_empno, trunc((sum((workend-workstart)*24)*60)/60)|| '시간 ' ||  round(mod((sum((workend-workstart)*24)*60), 60)) || '분' as worksum
		    from tbl_attendance
		    where workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1
		    group by fk_empno
		) A
		JOIN
		(
		    select empno, bumun, department, position, name, NVL(empimg, '없음') as empimg
		    from tbl_employee 
		) E
		on E.empno = A.fk_empno
		where fk_empno = #{empno}
	</select>
	
	
	
	<resultMap type="HashMap" id="weeklyWorkListMap">
		<result property="workstart"    column="workstart"     javaType="String" />
		<result property="workend"    column="workend"     javaType="String" />
		<result property="extendtime"  column="extendtime"   javaType="String" />
		<result property="worksum"    column="worksum"     javaType="String" />
		<result property="dayoff"    column="dayoff"     javaType="String" />
		<result property="trip"  column="trip"   javaType="String" />		
		<result property="tripstart"  column="tripstart"   javaType="String" />
		<result property="tripend"  column="tripend"   javaType="String" />
	</resultMap>
	<select id="getWeeklyWorkList" resultMap="weeklyWorkListMap" parameterType="HashMap">
		select NVL(to_char(workstart, 'yyyy.mm.dd hh24:mi dy'), to_char(to_date(workdate, 'yyyy.mm.dd'), 'yyyy.mm.dd hh24:mi dy')) as workstart
		     , NVL(to_char(workend, 'hh24:mi'), '00:00') as workend
		     , NVL(trunc((((workend-extendstart)*24)*60)/60), 0)|| '시간 ' ||  NVL(round(mod((((workend-extendstart)*24)*60), 60)), 0) || '분' as extendtime
		     , NVL(trunc((((workend-workstart)*24)*60)/60), 0)|| '시간 ' ||  NVL(round(mod((((workend-workstart)*24)*60), 60)), 0) || '분' as worksum
		     , decode(dayoff, 'Y', '연차 ', 'N', ' ' ) as dayoff
		     , decode(trip, 'Y', '외근 ', 'N', ' ' ) as trip
		     , NVL(to_char(tripstart, 'hh24:mi ~'), ' ') as tripstart, NVL(to_char(tripend, 'hh24:mi'), ' ') as tripend
		from tbl_attendance
		where fk_empno = #{empno} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1
		order by workdate
	</select>
	
	
	<delete id="deleteRequest" parameterType="HashMap">
		delete from tbl_attendance_request
		where requestid = #{requestid}
	</delete>
	
	
	    
	<select id="getCntstartnochk" resultType="String" parameterType="HashMap">
		select count(decode(workstart, null, ' ')) as cntstartnochk
		from tbl_attendance A
		JOIN tbl_employee E
		on A.fk_empno = E.empno
		where E.department = #{department} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1
		    and A.workstart is null
	</select>
	
	<select id="getCntendnochk" resultType="String" parameterType="HashMap">
		select count(decode(workend, null, ' ')) as cntendnochk
		from tbl_attendance A
		JOIN tbl_employee E
		on A.fk_empno = E.empno
		where E.department = #{department} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1
		    and A.workend is null
	</select>
	
	<select id="getCntabsent" resultType="String" parameterType="HashMap">
		select count(decode(workend, null, ' ')) as cntabsent
		from tbl_attendance A
		JOIN tbl_employee E
		on A.fk_empno = E.empno
		where E.department = #{department} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1
		    and A.workstart is null and A.workend is null
	</select>
	
	<select id="getCntdayoff" resultType="String" parameterType="HashMap">
		select count(dayoff) as cntdayoff
		from tbl_attendance A
		JOIN tbl_employee E
		on A.fk_empno = E.empno
		where E.department = #{department} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1 
		    and A.dayoff = 'Y'
	</select>
	
	<select id="getSumextend" resultType="String" parameterType="HashMap">
		select NVL(trunc((sum((workend-extendstart)*24)*60)/60), 0)|| '시간 ' ||  NVL(round(mod(sum(((workend-extendstart)*24)*60), 60)), 0) || '분' as sumextend
		from tbl_attendance A
		JOIN tbl_employee E
		on A.fk_empno = E.empno
		where E.department = #{department} and workdate between to_date(#{dateStart}, 'yyyy.mm.dd') and to_date(#{dateEnd}, 'yyyy.mm.dd')+1
	</select>
	
	
	<select id="getTotalCnt" resultType="int" parameterType="HashMap">
		select count(*)
		from 
		(
		select E.name as name, E.department as department
		     , to_char(workdate, 'yyyy-mm-dd') as workdate
		     , decode(A.workstart, null, '출근미등록', to_char(A.workstart, 'hh24:mi')) as workstart
		     , decode(A.workend, null, '퇴근미등록', to_char(A.workend, 'hh24:mi')) as workend 
		     , decode(A.dayoff, 'N', ' ', 'Y', '연차') as dayoff
		     , decode(A.trip, 'Y', '외근' || ' ' ||NVL(to_char(A.tripstart, 'hh24:mi'), ' ') || '~' || NVL(to_char(A.tripend, 'hh24:mi'), ' '), 'N', null) as trip
		     , decode(A.extendstart, null, null, '연장 '|| to_char(A.extendstart, 'hh24:mi') || '~' || to_char(A.workend, 'hh24:mi') ) as extend
		from tbl_attendance A
		JOIN tbl_employee E
		on A.fk_empno = E.empno
		where E.department = #{department} <if test= 'name != "" '>
										      and E.name = #{name}
										   </if>
		) C
		where to_date(workdate) between to_date(#{startTime}, 'yyyy.mm.dd') and to_date(#{endTime}, 'yyyy.mm.dd')+1
		    and (1=1 
		    <if test="filterList != null and filterList.size != 0"> 
			    <foreach collection="filterList" item="item" index="index" >
			    	<if test='item == "none"' >or 1=1</if>
			    	<if test='item == "trip"' >or trip like '%외근%'</if>
			    	<if test='item == "workstart"' >or workstart like '출근미등록'</if>
			    	<if test='item == "workend"' >or workend like '퇴근미등록'</if>
			    	<if test='item == "dayoff"' >or dayoff like '연차'</if>
			    	<if test='item == "extend"' >or extend like '%연장%'</if>
			    </foreach>
		    </if>
		    )
	</select>
	
	
	
	<resultMap type="HashMap" id="teamSearchListMap">
		<result property="name"    column="name"     javaType="String" />
		<result property="department"    column="department"     javaType="String" />
		<result property="workdate"  column="workdate"   javaType="String" />
		<result property="workstart"    column="workstart"     javaType="String" />
		<result property="workend"    column="workend"     javaType="String" />
		<result property="dayoff"  column="dayoff"   javaType="String" />		
		<result property="trip"  column="trip"   javaType="String" />
		<result property="extend"  column="extend"   javaType="String" />
	</resultMap>
	<select id="getTeamSearchList" resultMap="teamSearchListMap" parameterType="HashMap">
		select name, department, workdate, workstart, workend, dayoff, trip, extend
		from
		(
			select rownum AS RNO, name, department, workdate, workstart, workend, dayoff, trip, extend
			from 
			(
				select E.name as name, E.department as department
				     , to_char(workdate, 'yyyy-mm-dd') as workdate
				     , decode(A.workstart, null, '출근미등록', to_char(A.workstart, 'hh24:mi')) as workstart
				     , decode(A.workend, null, '퇴근미등록', to_char(A.workend, 'hh24:mi')) as workend 
				     , decode(A.dayoff, 'N', ' ', 'Y', '연차') as dayoff
				     , decode(A.trip, 'Y', '외근' || ' ' ||NVL(to_char(A.tripstart, 'hh24:mi'), ' ') || '~' || NVL(to_char(A.tripend, 'hh24:mi'), ' '), 'N', null) as trip
				     , decode(A.extendstart, null, null, '연장 '|| to_char(A.extendstart, 'hh24:mi') || '~' || to_char(A.workend, 'hh24:mi') ) as extend
				from tbl_attendance A
				JOIN tbl_employee E
				on A.fk_empno = E.empno
				where E.department = #{department} <if test= 'name != "" '>
												      and E.name = #{name}
												   </if>
			) C
			where to_date(workdate) between to_date(#{startTime}, 'yyyy.mm.dd') and to_date(#{endTime}, 'yyyy.mm.dd')+1
			    and (1=1 
			    <if test="filterList != null and filterList.size != 0"> 
				    <foreach collection="filterList" item="item" index="index" >
				    	<if test='item == "none"' >or 1=1</if>
				    	<if test='item == "trip"' >or trip like '%외근%'</if>
				    	<if test='item == "workstart"' >or workstart like '출근미등록'</if>
				    	<if test='item == "workend"' >or workend like '퇴근미등록'</if>
				    	<if test='item == "dayoff"' >or dayoff like '연차'</if>
				    	<if test='item == "extend"' >or extend like '%연장%'</if>
				    </foreach>
			    </if>
			    )
		) T
		where RNO between #{startRno} and #{endRno}
	</select>
	
	
	
</mapper>