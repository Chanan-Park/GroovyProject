<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper 기본설정 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 유일해야 함, 주로 파일명) -->
<mapper namespace="minsu">
	<!-- 이 안에 sql문을 적는다 -->
	
	<select id="getLogin" resultType="com.spring.groovy.management.model.MemberVO" parameterType="String" >
		select cpemail
		from tbl_employee
		where cpemail = #{cpemail}
	</select>
	
	
	<select id="login2" parameterType="HashMap" resultType="com.spring.groovy.management.model.MemberVO">
		select empno, cpemail, name, pwd, position, jubun, postcode, address, detailaddress
		     , extraaddress,empimg,birthday, bumun,department,pvemail,mobile,depttel,joindate
		     ,empstauts,bank, account,annualcnt, empimg
		from tbl_employee
		where cpemail = #{cpemail} and pwd = #{pwd}
	</select>
	<!-- ================================================================================================= -->
	
	<!-- 재직증명서 - 재직증명서신청 (insert) -->
	<insert id="proofEmployment" parameterType="com.spring.groovy.management.model.ProofVO">
		insert into tbl_certificate (proofno, fk_empno, issuedate, issueuse)
		values(seq_tbl_certificate.nextval, #{fk_empno}, sysdate, #{issueuse})
	</insert>
	
	
	<!-- 재직증명서 신청내역을 가져오기(select) -->
	<select id="getProofList" resultType="com.spring.groovy.management.model.ProofVO" parameterType="String">
		select proofno,fk_empno, to_char(issuedate, 'yyyy-mm-dd') issuedate, issueuse
		from tbl_certificate
		where fk_empno = #{empno}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- ================================================================================================= -->
	
	
	<!-- 관리자 사원관리 - 사원조회 -->
	<select id="searchInfoAdmin" resultType="com.spring.groovy.management.model.MemberVO">
		select empno, name, position, department,cpemail,mobile,joindate
		from tbl_employee
	</select>
	
	<!-- 관리자 사원조회 - 회원목록 수 조회  -->
	<select id="getcountList" resultType="int" parameterType="com.spring.groovy.common.Pagination" >
		SELECT COUNT(*) FROM tbl_employee
		<if test='searchType != "" and searchWord != "" '>
		WHERE LOWER(${searchType}) LIKE '%'||LOWER(#{searchWord})||'%'
		</if>

	</select>
	
	<!-- 관리자 사원관리 - 사원조회 한 페이지에 표시할 글 목록조회-->
	<select id="getOnePageCnt" resultType="com.spring.groovy.management.model.MemberVO" parameterType="HashMap" >
		select *
		from (SELECT ROWNUM AS RNO, v.*
			from( 
			    select *
			    from tbl_employee
			     <if test='searchType != "" and searchWord != "" '>
		            WHERE LOWER(${searchType}) LIKE '%'||LOWER(#{searchWord})||'%'
	            </if>
	            ORDER BY empno desc
			)V)
		WHERE RNO BETWEEN #{startRno} AND #{endRno}
	</select>
	
	
	
	
	<!-- 관리자 사원관리 - 사원등록 -->
	<insert id="getRegisterInfo" parameterType="HashMap" >
		insert into tbl_employee 
			(empno,cpemail,name,position,jubun,postcode,address,detailaddress, extraaddress
			,empimg,birthday, bumun,department,pvemail
			,mobile,depttel,joindate,empstauts,bank,account,annualcnt,gender)
		values(  ${empno}, ${cpemail}, ${name}, ${position}, ${jubun}, ${postcode}, ${address}, ${detailaddress}, ${extraaddress}
				,${empimg}, ${birthday}, ${bumun}, ${department}, ${pvemail}, ${mobile}, ${depttel}, ${joindate}, ${empstauts}
				, ${bank}, ${account}, ${annualcnt}, ${gender})
	</insert>
	
	
	<!-- 관리자 사원관리 - 사원등록(이메일중복확인 Ajax)-->
	<select id="cpEmailList" parameterType="HashMap" resultType="com.spring.groovy.management.model.MemberVO">
		select cpemail
		from tbl_employee
		where cpemail = #{cpemail}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		
</mapper>